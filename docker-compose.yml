version: "3.7"

services:

  webvirtcloud-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: webvirtcloud-frontend
    hostname: webvirtcloud-frontend
    ports:
      - 37703:80
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    env_file:
      - global.env
      - custom.env

  webvirtcloud-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: webvirtcloud-backend
    hostname: webvirtcloud-backend
    ports:
      - 127.0.0.1:37701:8000
    command: gunicorn webvirtcloud.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - global.env
      - custom.env
    depends_on:
      webvirtcloud-backend_db_migration:
        condition: service_completed_successfully
      webvirtcloud-mariadb:
        condition: service_healthy

  webvirtcloud-backend_db_migration:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: webvirtcloud-db-migration
    command: python3 manage.py migrate --noinput
    env_file:
      - global.env
      - custom.env
    depends_on:
      webvirtcloud-mariadb:
        condition: service_healthy

  webvirtcloud-novnc:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: webvirtcloud-novnc
    hostname: webvirtcloud-novnc
    ports:
      - 127.0.0.1:37702:6080
    command: python3 manage.py novncd --verbose
    env_file:
      - global.env
      - custom.env
    depends_on:
      webvirtcloud-mariadb:
        condition: service_healthy

  webvirtcloud-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: webvirtcloud-worker
    hostname: webvirtcloud-worker
    command: celery -A webvirtcloud worker -l info
    env_file:
      - global.env
      - custom.env
    healthcheck:
      test: [ "CMD", "celery", "inspect", "ping" ]
      start_period: 1m
      # start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
    depends_on:
      webvirtcloud-backend_db_migration:
        condition: service_completed_successfully
      webvirtcloud-mariadb:
        condition: service_healthy
      webvirtcloud-rabbitmq:
        condition: service_healthy

  webvirtcloud-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: webvirtcloud-scheduler
    hostname: webvirtcloud-scheduler
    command: celery -A webvirtcloud beat -l info
    env_file:
      - global.env
      - custom.env
    depends_on:
      webvirtcloud-backend_db_migration:
        condition: service_completed_successfully
      webvirtcloud-worker:
        condition: service_healthy
      webvirtcloud-mariadb:
        condition: service_healthy
      webvirtcloud-rabbitmq:
        condition: service_healthy

  webvirtcloud-mariadb:
    image: mariadb:10.6.10
    container_name: webvirtcloud-mariadb
    hostname: webvirtcloud-mariadb
    volumes:
      - ./.mysql:/var/lib/mysql
    env_file:
      - global.env
      - custom.env
    healthcheck:
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      start_period: 1m
      # start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3

  webvirtcloud-rabbitmq:
    image: rabbitmq:3.10.13
    container_name: webvirtcloud-rabbitmq
    hostname: webvirtcloud-rabbitmq
    env_file:
      - global.env
      - custom.env
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      start_period: 1m
      # start_interval: 10s
      interval: 30s
      timeout: 30s
      retries: 3
